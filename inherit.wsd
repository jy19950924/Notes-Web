@startuml 
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor black

title Prototype chain inheritance
class Null{}
class Object{
    _proto_ 
}
Object::_proto_ -right->Null

class Person{
    _proto_
    setAge()
}
Person::_proto_ -right-> Object

class fPerson{
    prototype
    this.name
    this.age 
    this.play
    this.setName()
}
fPerson::prototype -right-> Person

object person1{
    _proto_ 
}
person1 .up.> Person
fPerson -down->person1: new

class fStudent{
    prototype 
    this.price
    this.setScore()
}
fStudent::prototype -left->person1


object student1{
    _proto_ 
}
object student2{
    _proto_
}
fStudent -down->student1 : new
fStudent -down->student2:new
student1 .up.>person1
student2 .up.>person1
@enduml

' 构造器继承
' 缺点：继承单层结构，子类只能继承父类数据，不可以继承祖父节点结构
@startuml  
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor black

title constructor inherit

object Null
class fPerson{
    prototype
    this.name
    this.age
    this.setName()
}
class Person{
    _proto_
}
class Object{
    _proto_
}
Object::_proto_ -right->Null
Person::_proto_ -right->Object
fPerson::prototype -right->Person

class fStudent{
    prototype
    basic_fun()
    this.price
}
class Student{
    price
    age
    name
    _proto_
}
fStudent::prototype -right->Student
Student::_proto_ -up--->Object

object student1{
     _proto_
}
object student2{
    _proto_
}

object person1{
    _proto_
}
object person2{
    _proto_
}
fPerson -down->person1:new
fPerson -down->person2:new

fStudent -up->student1:new
fStudent -up->student2:new

student2 .up. person2:Person.call()
student1 .up. person1:Person.call()
@enduml

@startuml 
title 
@enduml



